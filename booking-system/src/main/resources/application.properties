spring.application.name=booking-system
spring.profiles.active=${PROFILE:dev,seed}
server.port=${SERVER_PORT:8085}


management.endpoints.web.exposure.include=*
spring.cache.cache-names=movieCache

#MongoDB Properties
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.host=${MONGO_DB_HOSTNAME}
spring.data.mongodb.username=${MONGO_DB_USERNAME}
spring.data.mongodb.password=${MONGO_DB_PASSWORD}
spring.data.mongodb.database=${MONGO_DB_NAME}
spring.data.mongodb.port=
spring.data.mongodb.auto-index-creation=true

spring.redis.cluster.nodes=${REDIS_HOST}
spring.redis.cluster.max-redirects=3
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.max-wait=500
spring.redis.lettuce.cluster.refresh.adaptive=true
spring.redis.lettuce.cluster.refresh.period=15
spring.redis.database=0
spring.cache.type=redis
spring.cache.redis.cache-null-values=false
spring.cache.redis.use-key-prefix=true

logging.level.io.lettuce.core.cluster=WARN

spring.data.redis.repositories.enabled=false

booking.locking.time-in-seconds=600

#kafka Properties
spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

##app specific conf
kafka.topic.creation.enabled=false
kafka.bootstrapAddress=${spring.kafka.producer.bootstrap-servers}

kafka.consumer.topic.booking-event-creation=booking-event-creation
kafka.consumer.topic.booking-task-creation=booking-task-creation
kafka.producer.topic.booking-task-creation=${kafka.consumer.topic.booking-task-creation}

kafka.topic[0].name=booking-event-creation
kafka.topic[0].partitions=1
kafka.topic[0].replicas=1
##app specific conf
kafka.enabled=true

logging.level.com.intuit.craft.booking=DEBUG


booking.secret.key=d2lsbGJvb2t0aWNrZXQ=
booking.secret.token-expiry-time-in-seconds=${booking.locking.time-in-seconds}